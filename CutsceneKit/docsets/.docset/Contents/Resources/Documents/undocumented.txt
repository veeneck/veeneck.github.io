CKSequence.swift
	public class CKSequence
	var actions = [CKAction]()
	var actionIndex : Int = 0
	var callbackIndex : Int = 0
	var running : Bool = true
	let targetNode : SKNode
	public init(targetNode:SKNode)
	func run(callback:()->())
	func skip()
	func finish()
	func delay(delay:Double, closure:()->())
CKAction.swift
	public class CKAction : SKNode
	var delay : Double = 0
	var finishEarly : Bool = false
	public override init()
	required public init?(coder aDecoder: NSCoder)
	func process(callback:()->())
	func finish()
	func timingFunc(time:Float) -> Float
	func setTimingFunctionsForActions(actions:Array<SKAction>) -> Array<SKAction>
CKCutscene.swift
	var sequences = [CKSequence]()
	var currentSequence : CKSequence?
	public init()
	func playNextAction(completion:()->())
	func prepForNextAction(completion:()->())
	func skipCurrentSequence()
